Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o (exit)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                              swew_transmit.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                              swew_transmit.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

temp                0x1               swew_transmit.o
data_array          0x4               swew_transmit.o
payload_len         0x1               nrf24L01_plus-master/nrf24.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
LOAD swew_transmit.o
LOAD nrf24L01_plus-master/nrf24.o
LOAD ../uart.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x788
 *(.vectors)
 .vectors       0x0000000000000000       0xac /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000000000000ac                . = ALIGN (0x2)
                0x00000000000000ac                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000ac        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000ac                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000ac                __ctors_start = .
 *(.ctors)
                0x00000000000000ac                __ctors_end = .
                0x00000000000000ac                __dtors_start = .
 *(.dtors)
                0x00000000000000ac                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000ac        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
                0x00000000000000ac                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000ac        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000b8       0x16 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
                0x00000000000000b8                __do_copy_data
 .init4         0x00000000000000ce       0x10 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x00000000000000ce                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000de        0x8 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
 *(.init9)
 *(.text)
 .text          0x00000000000000e6        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
                0x00000000000000e6                __vector_38
                0x00000000000000e6                __vector_22
                0x00000000000000e6                __vector_28
                0x00000000000000e6                __vector_1
                0x00000000000000e6                __vector_32
                0x00000000000000e6                __vector_34
                0x00000000000000e6                __vector_24
                0x00000000000000e6                __vector_12
                0x00000000000000e6                __bad_interrupt
                0x00000000000000e6                __vector_6
                0x00000000000000e6                __vector_31
                0x00000000000000e6                __vector_35
                0x00000000000000e6                __vector_39
                0x00000000000000e6                __vector_3
                0x00000000000000e6                __vector_23
                0x00000000000000e6                __vector_30
                0x00000000000000e6                __vector_25
                0x00000000000000e6                __vector_11
                0x00000000000000e6                __vector_13
                0x00000000000000e6                __vector_17
                0x00000000000000e6                __vector_19
                0x00000000000000e6                __vector_7
                0x00000000000000e6                __vector_41
                0x00000000000000e6                __vector_27
                0x00000000000000e6                __vector_5
                0x00000000000000e6                __vector_33
                0x00000000000000e6                __vector_37
                0x00000000000000e6                __vector_4
                0x00000000000000e6                __vector_9
                0x00000000000000e6                __vector_2
                0x00000000000000e6                __vector_21
                0x00000000000000e6                __vector_15
                0x00000000000000e6                __vector_36
                0x00000000000000e6                __vector_29
                0x00000000000000e6                __vector_40
                0x00000000000000e6                __vector_8
                0x00000000000000e6                __vector_26
                0x00000000000000e6                __vector_14
                0x00000000000000e6                __vector_10
                0x00000000000000e6                __vector_16
                0x00000000000000e6                __vector_18
                0x00000000000000e6                __vector_20
                0x00000000000000e6                __vector_42
 .text          0x00000000000000ea       0x7a swew_transmit.o
                0x00000000000000ea                port_init
                0x00000000000000f8                tcnt_init
                0x000000000000012a                light_em_up
 .text          0x0000000000000164      0x402 nrf24L01_plus-master/nrf24.o
                0x000000000000016c                nrf24_payload_length
                0x0000000000000172                spi_transfer
                0x00000000000001aa                nrf24_payloadLength
                0x00000000000001d2                nrf24_getStatus
                0x00000000000001f4                nrf24_isSending
                0x0000000000000204                nrf24_lastMessageStatus
                0x000000000000021c                nrf24_transferSync
                0x0000000000000254                nrf24_transmitSync
                0x000000000000027c                nrf24_configRegister
                0x00000000000002a4                nrf24_getData
                0x00000000000002ce                nrf24_powerUpRx
                0x00000000000002f0                nrf24_config
                0x0000000000000362                nrf24_powerUpTx
                0x0000000000000372                nrf24_send
                0x00000000000003de                nrf24_powerDown
                0x00000000000003e8                nrf24_readRegister
                0x000000000000041a                nrf24_rxFifoEmpty
                0x000000000000043e                nrf24_dataReady
                0x0000000000000476                nrf24_retransmissionCount
                0x000000000000049a                nrf24_writeRegister
                0x00000000000004ec                nrf24_rx_address
                0x00000000000004fc                nrf24_tx_address
                0x000000000000051a                nrf24_setupPins
                0x0000000000000526                nrf24_init
                0x0000000000000530                nrf24_ce_digitalWrite
                0x000000000000053c                nrf24_csn_digitalWrite
                0x0000000000000548                nrf24_sck_digitalWrite
                0x0000000000000554                nrf24_mosi_digitalWrite
                0x0000000000000560                nrf24_miso_digitalRead
 .text          0x0000000000000566       0x84 ../uart.o
                0x0000000000000566                uart_init
                0x0000000000000586                uart_putc
                0x0000000000000594                uart_puts
                0x00000000000005b2                uart_getc
                0x00000000000005c0                uart_gets
 .text          0x00000000000005ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text          0x00000000000005ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000000005ea        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x00000000000005ea                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000005ea      0x19a swew_transmit.o
                0x00000000000005ea                main
 .text.libgcc.mul
                0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000784                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000784        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
                0x0000000000000784                exit
                0x0000000000000784                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000784        0x4 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000788                _etext = .

.data           0x0000000000800100       0x3a load address 0x0000000000000788
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
 .data          0x0000000000800100       0x3a swew_transmit.o
                0x0000000000800100                rx_address
                0x0000000000800105                tx_address
                0x000000000080010a                light_val
 .data          0x000000000080013a        0x0 nrf24L01_plus-master/nrf24.o
 .data          0x000000000080013a        0x0 ../uart.o
 .data          0x000000000080013a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .data          0x000000000080013a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .data          0x000000000080013a        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x000000000080013a                . = ALIGN (0x2)
                0x000000000080013a                _edata = .
                0x000000000080013a                PROVIDE (__data_end, .)

.bss            0x000000000080013a        0x7
                0x000000000080013a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080013a        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
 .bss           0x000000000080013a        0x1 swew_transmit.o
                0x000000000080013a                q
 .bss           0x000000000080013b        0x0 nrf24L01_plus-master/nrf24.o
 .bss           0x000000000080013b        0x0 ../uart.o
 .bss           0x000000000080013b        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_exit.o)
 .bss           0x000000000080013b        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x000000000080013b        0x0 /usr/lib/gcc/avr/4.8.2/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080013b        0x5 swew_transmit.o
                0x000000000080013b                temp
                0x000000000080013c                data_array
 COMMON         0x0000000000800140        0x1 nrf24L01_plus-master/nrf24.o
                0x0000000000800140                payload_len
                0x0000000000800141                PROVIDE (__bss_end, .)
                0x0000000000000788                __data_load_start = LOADADDR (.data)
                0x00000000000007c2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800141        0x0
                0x0000000000800141                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800141                PROVIDE (__noinit_end, .)
                0x0000000000800141                _end = .
                0x0000000000800141                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x27c0
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o
 .stab          0x00000000000006cc      0x930 swew_transmit.o
                                        0x93c (size before relaxing)
 .stab          0x0000000000000ffc     0x1290 nrf24L01_plus-master/nrf24.o
                                       0x1458 (size before relaxing)
 .stab          0x000000000000228c      0x534 ../uart.o
                                        0x6fc (size before relaxing)

.stabstr        0x0000000000000000     0x13a0
 *(.stabstr)
 .stabstr       0x0000000000000000     0x13a0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr5/crtm32u4.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 swew_transmit.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 nrf24L01_plus-master/nrf24.o
 .comment       0x0000000000000000       0x12 ../uart.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(swew_transmit.elf elf32-avr)
LOAD linker stubs
